#!/bin/bash

#echo "Usage: proceed-file <dir> <file-without-extension> <format>"

function checkExitCode 
{
    if [ "$?" != "0" ];
    then
        echo "  ! Stopping." | tee -a log.log
        exit -1
    fi
}

dir=$1
file=$2
report=Report.fr
faReport=report.txt

if [ "$4" == "limits" ];
then
    limitsOption="-l $5 $6"
    echo "  i Enabling option $limitsOption"
fi

if [ "$3" == "dsf" ];
then 
    filedsf=$file.dsf
    filedat=$file.dat

    fullname=$dir/$filedsf

    echo "  + Coping $fullname..." | tee -a log.log
    cp $fullname .
    
    checkExitCode
    
    echo "  + Running Faildows tool..." | tee -a log.log
    wine dsf2dat.exe $filedsf
    checkExitCode
    
    rm -f $file.txt
    
    echo "  + Creating plain data..." | tee -a log.log
    ./flux-analysis -f $filedat -F dat -t "DATA-plain.txt" $limitsOption -u 6 -o "DATA.bin" -r -0.005 -K 30 -z +4 | tee -a log.log

    checkExitCode
    
    echo "  + Filtering and detecting..." | tee -a log.log
    ./flux-analysis -i DATA.bin -t DATA.txt -n 1.8 2 -S "config-myza.cfg" -s "DATA-strikes.txt" -t "DATA-filtered.txt" -M "hist.txt" -K 340 -z +4 -R $faReport  $limitsOption | tee -a log.log

    checkExitCode
    
elif [ "$3" == "efm" ];
then
    fileefm=$file.efm

    fullname=$dir/$fileefm

    echo "  + Coping $fullname..." | tee -a log.log
    cp $fullname .
    
    echo "  + Creating plain data..." | tee -a log.log
    ./flux-analysis -f $fileefm -F efm -t "DATA-plain.txt" $limitsOption -o "DATA.bin" -r 4 -z +4 -K 3
    
    echo "  + Filtering and detecting..." | tee -a log.log
    ./flux-analysis -i DATA.bin -t DATA.txt -n 1.8 2 -S "config-iapras.cfg" -t "DATA-filtered.txt" -s "DATA-strikes.txt" -M "hist.txt" -K 3 -z +4 -R $faReport  $limitsOption | tee -a log.log
    
else
    echo "    Invalid file format specified."
    exit
fi

count=`cat $faReport`
if [ "$count" !=  "0" ];
then
    echo "In $file founded: $count" >> Report.txt
    fileNameInsertion="-DETECTED-$count"
fi

echo "  + Plotting E(t) graph with gnuplot..." | tee -a log.log
cat plot-graph.pattern | sed s/"#FILENAME#"/$file$fileNameInsertion/ | sed s/"#DATETIME#"/$file/ > plot-current.gp
gnuplot plot-current.gp 2>&1 | tee -a log.log

echo "  + Plotting histogram with gnuplot..." | tee -a log.log
cat plot-hist.pattern | sed s/"#FILENAME#"/$file$fileNameInsertion/ | sed s/"#DATETIME#"/$file/ > plot-current.gp

gnuplot plot-current.gp 2>&1 | tee -a log.log
